
// @import "file-management/variables";
// @import "file-management/mixins";
// @import "file-management/functions";
// @import "file-management/mobile";
// @import "file-management/mixins";

@import url('https://fonts.googleapis.com/css?family=David+Libre|Federo|Days+One|ZCOOL+QingKe+HuangYou');

//assignment: variables; assignment: complementary colors;
$text-color-primary: hsla(111, 30%, 21%, 1);
$text-color-secondary: hsla(30, 96%, 52%, 1.0);
$background-color-primary: #eaeaea;
$background-color-secondary: lightblue;
$accent-color: hsla(30, 96%, 52%, 1.0);
$button-color: orange;
$alert-color: red;

$primary-font: 'Days One', Arial;
$secondary-font: 'ZCOOL QingKe HuangYou', sans-serif;
$accent-font: 'Federo', sans-serif;
$body-font: 'David Libre', cursive;
$title-color: grey;
$body-color: black;

//breakpoints
$breakpoint-sm: 420px;
$breakpoint-md: 768px;
$breakpoint-lg: 1024px;
$breakpoint-xl: 1400px;

//padding and margins -- refactor with mixin
$padding-sm: 5px;
$padding-md: 10px;
$padding-lg: 20px;

$margin-sm: 2px;
$margin-md: 8px;
$margin-lg: 15px;

//button variables
$button-height: 60px;
$button-width: 200px;

//re-sizing text variables
$sm-proportion: 0.7;
$med-proportion: 0.85;
$lg-proportion: 1;
$xl-proportion: 1.15;

//border styling
$border-radius: 4px;

/*type-scale for root (desktop)
sets default (ie root), but can be overridden for mobile if fontScale is modified */
:root {
  --fontBaseSize: 20px;
  --fontScale: 1.25;
}



/* modular scaling based upon unit of fontScale variable*/
.p-scale{
  font-size: var(--fontBaseSize);
}
.h5-scale {
  font-size: calc(var(--fontBaseSize) * var(--fontScale));
}
.h4-scale {
  font-size: calc(var(--fontBaseSize) * var(--fontScale) * var(--fontScale));
}         
.h3-scale {
  font-size: calc(var(--fontBaseSize) * var(--fontScale) * var(--fontScale) * var(--fontScale));
}
.h2-scale {
  font-size: calc(var(--fontBaseSize) * var(--fontScale) * var(--fontScale) * var(--fontScale) * var(--fontScale));
}
.h1-scale {
  font-size: calc(var(--fontBaseSize) * var(--fontScale) * var(--fontScale) * var(--fontScale) * var(--fontScale) * var(--fontScale));
}

//adjusts base for all font scale classes
@media only screen and (max-width: $breakpoint-md){
    [class*="scale"] {
      --fontBaseSize: 16px;
  }
}

@media only screen and (max-width: $breakpoint-sm){
    [class*="scale"] {
      --fontBaseSize: 14px;
  }
}

// /*image credit: https://www.flickr.com/photos/usedfree/16512474046/in/photolist-ra9Kfo-84E1ng-2frDAM-37skj4-3x9Ro3-7L4UdD-S9tify-aRbmcz-nkxpb-DuhWt-2fJ89H-84E1kF-6drMP5-bDCEaF-5BrqHc-fA89PX-8s1yq7-6GqDsV-9XZwvY-8s1ytm-2kK8QR-6j6pfd-8TwRcG-8rXv1R-dLUquP-8MgNzX-rZvKG-aqn7Ay-6mgN8n-3r2qDm-cfqXg9-5TWfaj-93qwyZ-8s1ybL-fDZD3A-mSmH5-8s1yeE-dojsZh-8s1y4q-BCQYrL-btk3H-275HB-nUMB19-aMZgMz-Sowco-dwxSem-t1e9rD-2frG8F-A8FYC-kwiJRF */
// body{
//     background-image: url(../img/treesblackandwhite.jpg);
//     margin: 0 auto;
//     padding: 0;
//     max-width: var(--bodyMaxWidth, 80em); //assignment 2: custom vaiable declared that is modified in media query
//     padding: var(--bodyPadding, 1em) 0; //assignment 2: custom vaiable declared that is modified in media query
//     --textPadding: 30px; //assignment 2: global variable to be re-calculated upon media query
//     --imagePadding: 5px; //assignment 2: global variable to be re-calculated upon media query
// }

//container classes
.container{
  margin: 0;
  width: 100%;
  padding: 0;
  // border: solid red 4px;
}

.flex-area{
  display: flex;
  padding-top: $padding-md;
  padding-bottom: $padding-md;
  flex-flow: row wrap;
  margin-top: $margin-md;
  margin-top: $margin-md;
  // border: solid blue 4px;
}

:root {
  --fullWidth: 93%;
}

.spread-6{
  width: var(--fullWidth);
}

.spread-5{
  width: calc(var(--fullWidth)*(5/6));
}

.spread-4{
  width: calc(var(--fullWidth)*(4/6));
}

.spread-3{
  width: calc(var(--fullWidth)*(3/6));
}

.spread-2{
  width: calc(var(--fullWidth)*(2/6));
}

.spread-1{
  width: calc(var(--fullWidth)*(1/6));
}

// //responsive flex areas
// .expand-sm{
//   @media only screen and (max-width: $breakpoint-sm) {
//       width: 100%;
//   }
// }

// .expand-md{
//   @media only screen and (max-width: $breakpoint-md) {
//       width: 100%;
//   }
// }



//above and beyond -- expands all based on container
.expand-all-children-sm{
    @media only screen and (max-width: $breakpoint-sm) {
      [class^="spread-"], [class*=" spread-"] {
        width: 100%;
      }
  }
}

.expand-all-children-md{
    @media only screen and (max-width: $breakpoint-md) {
      [class^="spread-"], [class*=" spread-"] {
        width: 100%;
      }
  }
}

.lightblue-fill{
  background-color: lightblue;
}

.red-fill{
  background-color: red;
}

.blue-fill{
  background-color: blue;
}

//alignment classes
.center{
  display: flex;
  justify-content: center;
  align-items: center;
}



//button styling

%button{
  max-width: $button-width;
  height: $button-height;
  border-radius: $border-radius;
  font-family: $body-font;
  font-size: var(--fontBaseSize);
  // @media only screen and (max-width: $breakpoint-sm){
  //   height: calc($button-height * $sm-proportion);
  //   font-size: calc(var(--fontBaseSize) * $sm-proportion);
  // }
  // @media only screen and (max-width: $breakpoint-md){
  //     height: calc($button-height * .4);
  //     font-size: calc(var(--fontBaseSize) * $md-proportion);
  // }
  // @media only screen and (max-width: $breakpoint-lg){
  //     height: calc($button-height * $lg-proportion);
  //     font-size: calc(var(--fontBaseSize) * $lg-proportion);
  // }
  // @media only screen and (max-width: $breakpoint-xl){
  //     height: calc($button-height * $xl-proportion);
  //     font-size: calc(var(--fontBaseSize) * $xl-proportion);
  // }
}
  
.button-default{
  @extend %button;
  background-color: $button-color;
}

.button-secondary{
  @extend %button;
  background-color: $background-color-secondary;
}

.button-danger{
  @extend %button;
  background-color: $alert-color;
}

//image styling
%image{
  border: 1px solid #bdbdbd;
  padding: $padding-md;
  margin: $margin-md;
  box-shadow: 5px 5px #dbdbdb;
  border-radius: $border-radius;
  height: 100%;
}

.img-full{
  @extend %image;
  max-width: 100%;
}

.img-lg{
  @extend %image;
  max-width: 500px;
}

.img-md{
  @extend %image;
  max-width: 300px;
}

.img-sm{
  @extend %image;
  max-width: 150px;
}

//text styling
.title{
  // text-decoration: underline;
  color: $title-color;
  font-family: $accent-font;
  padding: $padding-md;
}

.body{
  text-align: left;
  padding: $padding-md;
  margin: $margin-md;
  font-family: $body-font;
}



//screen divisions
hr.divider-vertical{
  float:left;
  width: 0px;
  height: 95%; 
  opacity: .5;
}
 // credit Chris Coyler: https://css-tricks.com/examples/hrs/;
// hr.divider-horizontal { 
//   border: 0; 
//   height: 1px; 
//   background-image: linear-gradient(to right, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.75), rgba(0, 0, 0, 0));
// }



.nav { 
  display: flex;
  width: 98%;
  align-items: center;
  justify-content: center;
  justify-content: space-between;
  list-style-type: none;
  padding: $padding-md;
  background-color: $background-color-secondary;
  // border: 1px solid $text-color-primary;
  // border-radius: $border-radius;
}

.nav a {   
  padding-right: 30px;
  font-family: $secondary-font;
  font-size: 26px;
  padding: $padding-sm;
  border-radius:5px;
    &:link{
      color: $background-color-primary;
    }
    &:hover{
      text-decoration: underline;
    }
    &:visited{
      color: $background-color-primary;
    }
}

@media screen and (max-width: $breakpoint-sm){   //assignment 2: medoia query by type, "screen"
  .nav {
    padding: 5px;
    margin: 5px;
    a {
      font-size: 22px;
    }
  }
}


// //------ non-framework code -------

// //credit to W3 (https://www.w3schools.com/howto/tryit.asp?filename=tryhow_css_image_text)
// .overlay-container {
//   position: relative;
//   text-align: center;
//   color: white;
// }

// .centered-overlay-text {
//   position: absolute;
//   top: 50%;
//   left: 50%;
//   transform: translate(-50%, -50%);
// }


